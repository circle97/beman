<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beman.mapper.TransactionMapper">

    <!-- 基础结果映射 -->
    <resultMap id="BaseResultMap" type="com.beman.model.Transaction">
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="type" property="type" />
        <result column="amount" property="amount" />
        <result column="category_id" property="categoryId" />
        <result column="category_name" property="categoryName" />
        <result column="category_icon" property="categoryIcon" />
        <result column="description" property="description" />
        <result column="transaction_date" property="transactionDate" />
        <result column="payment_method" property="paymentMethod" />
        <result column="remark" property="remark" />
        <result column="status" property="status" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 分页查询交易记录 -->
    <select id="selectTransactionPage" resultMap="BaseResultMap">
        SELECT 
            t.*,
            c.name as category_name,
            c.icon as category_icon
        FROM transaction t
        LEFT JOIN category c ON t.category_id = c.id
        WHERE t.user_id = #{userId}
        <if test="type != null">
            AND t.type = #{type}
        </if>
        <if test="categoryId != null">
            AND t.category_id = #{categoryId}
        </if>
        <if test="startDate != null">
            AND DATE(t.transaction_date) >= #{startDate}
        </if>
        <if test="endDate != null">
            AND DATE(t.transaction_date) <= #{endDate}
        </if>
        <if test="keyword != null and keyword != ''">
            AND t.description LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="paymentMethod != null">
            AND t.payment_method = #{paymentMethod}
        </if>
        <if test="minAmount != null">
            AND t.amount >= #{minAmount}
        </if>
        <if test="maxAmount != null">
            AND t.amount <= #{maxAmount}
        </if>
        ORDER BY t.transaction_date DESC
    </select>

    <!-- 获取本月收入 -->
    <select id="selectMonthIncome" resultType="java.math.BigDecimal">
        SELECT COALESCE(SUM(amount), 0)
        FROM transaction
        WHERE user_id = #{userId} 
          AND type = 1 
          AND YEAR(transaction_date) = #{year} 
          AND MONTH(transaction_date) = #{month}
          AND status = 1
    </select>

    <!-- 获取本月支出 -->
    <select id="selectMonthExpense" resultType="java.math.BigDecimal">
        SELECT COALESCE(SUM(amount), 0)
        FROM transaction
        WHERE user_id = #{userId} 
          AND type = 2 
          AND YEAR(transaction_date) = #{year} 
          AND MONTH(transaction_date) = #{month}
          AND status = 1
    </select>

    <!-- 获取本年收入 -->
    <select id="selectYearIncome" resultType="java.math.BigDecimal">
        SELECT COALESCE(SUM(amount), 0)
        FROM transaction
        WHERE user_id = #{userId} 
          AND type = 1 
          AND YEAR(transaction_date) = #{year}
          AND status = 1
    </select>

    <!-- 获取本年支出 -->
    <select id="selectYearExpense" resultType="java.math.BigDecimal">
        SELECT COALESCE(SUM(amount), 0)
        FROM transaction
        WHERE user_id = #{userId} 
          AND type = 2 
          AND YEAR(transaction_date) = #{year}
          AND status = 1
    </select>

    <!-- 获取支出分类统计 -->
    <select id="selectExpenseCategoryStats" resultType="com.beman.model.vo.FinanceStatsVO$CategoryStatsVO">
        SELECT 
            c.id as categoryId,
            c.name as categoryName,
            c.icon as categoryIcon,
            c.color as categoryColor,
            COALESCE(SUM(t.amount), 0) as amount,
            CASE 
                WHEN (SELECT COALESCE(SUM(amount), 0) FROM transaction 
                      WHERE user_id = #{userId} AND type = 2 AND YEAR(transaction_date) = #{year} 
                      AND MONTH(transaction_date) = #{month} AND status = 1) > 0
                THEN ROUND(
                    SUM(t.amount) * 100.0 / (SELECT COALESCE(SUM(amount), 0) FROM transaction 
                                            WHERE user_id = #{userId} AND type = 2 AND YEAR(transaction_date) = #{year} 
                                            AND MONTH(transaction_date) = #{month} AND status = 1), 2
                )
                ELSE 0
            END as percentage
        FROM category c
        LEFT JOIN transaction t ON c.id = t.category_id 
            AND t.user_id = #{userId} 
            AND t.type = 2 
            AND YEAR(t.transaction_date) = #{year} 
            AND MONTH(t.transaction_date) = #{month}
            AND t.status = 1
        WHERE (c.user_id = 0 OR c.user_id = #{userId}) 
          AND c.type = 2 
          AND c.enabled = 1
        GROUP BY c.id, c.name, c.icon, c.color
        HAVING amount > 0
        ORDER BY amount DESC
    </select>

    <!-- 获取收入分类统计 -->
    <select id="selectIncomeCategoryStats" resultType="com.beman.model.vo.FinanceStatsVO$CategoryStatsVO">
        SELECT 
            c.id as categoryId,
            c.name as categoryName,
            c.icon as categoryIcon,
            c.color as categoryColor,
            COALESCE(SUM(t.amount), 0) as amount,
            CASE 
                WHEN (SELECT COALESCE(SUM(amount), 0) FROM transaction 
                      WHERE user_id = #{userId} AND type = 1 AND YEAR(transaction_date) = #{year} 
                      AND MONTH(transaction_date) = #{month} AND status = 1) > 0
                THEN ROUND(
                    SUM(t.amount) * 100.0 / (SELECT COALESCE(SUM(amount), 0) FROM transaction 
                                            WHERE user_id = #{userId} AND type = 1 AND YEAR(transaction_date) = #{year} 
                                            AND MONTH(transaction_date) = #{month} AND status = 1), 2
                )
                ELSE 0
            END as percentage
        FROM category c
        LEFT JOIN transaction t ON c.id = t.category_id 
            AND t.user_id = #{userId} 
            AND t.type = 1 
            AND YEAR(t.transaction_date) = #{year} 
            AND MONTH(t.transaction_date) = #{month}
            AND t.status = 1
        WHERE (c.user_id = 0 OR c.user_id = #{userId}) 
          AND c.type = 1 
          AND c.enabled = 1
        GROUP BY c.id, c.name, c.icon, c.color
        HAVING amount > 0
        ORDER BY amount DESC
    </select>

    <!-- 获取最近7天支出趋势 -->
    <select id="selectWeeklyExpenseTrend" resultType="com.beman.model.vo.FinanceStatsVO$DailyStatsVO">
        SELECT 
            DATE(transaction_date) as date,
            COALESCE(SUM(amount), 0) as amount
        FROM transaction
        WHERE user_id = #{userId} 
          AND type = 2 
          AND transaction_date >= DATE_SUB(CURDATE(), INTERVAL 6 DAY)
          AND status = 1
        GROUP BY DATE(transaction_date)
        ORDER BY date ASC
    </select>

    <!-- 获取最近7天收入趋势 -->
    <select id="selectWeeklyIncomeTrend" resultType="com.beman.model.vo.FinanceStatsVO$DailyStatsVO">
        SELECT 
            DATE(transaction_date) as date,
            COALESCE(SUM(amount), 0) as amount
        FROM transaction
        WHERE user_id = #{userId} 
          AND type = 1 
          AND transaction_date >= DATE_SUB(CURDATE(), INTERVAL 6 DAY)
          AND status = 1
        GROUP BY DATE(transaction_date)
        ORDER BY date ASC
    </select>

    <!-- 获取支付方式统计 -->
    <select id="selectPaymentMethodStats" resultType="com.beman.model.vo.FinanceStatsVO$PaymentMethodStatsVO">
        SELECT 
            payment_method as paymentMethod,
            CASE payment_method
                WHEN 1 THEN '现金'
                WHEN 2 THEN '支付宝'
                WHEN 3 THEN '微信'
                WHEN 4 THEN '银行卡'
                ELSE '其他'
            END as paymentMethodName,
            COALESCE(SUM(amount), 0) as amount,
            CASE 
                WHEN (SELECT COALESCE(SUM(amount), 0) FROM transaction 
                      WHERE user_id = #{userId} AND YEAR(transaction_date) = #{year} 
                      AND MONTH(transaction_date) = #{month} AND status = 1) > 0
                THEN ROUND(
                    SUM(amount) * 100.0 / (SELECT COALESCE(SUM(amount), 0) FROM transaction 
                                            WHERE user_id = #{userId} AND YEAR(transaction_date) = #{year} 
                                            AND MONTH(transaction_date) = #{month} AND status = 1), 2
                )
                ELSE 0
            END as percentage
        FROM transaction
        WHERE user_id = #{userId} 
          AND YEAR(transaction_date) = #{year} 
          AND MONTH(transaction_date) = #{month}
          AND status = 1
        GROUP BY payment_method
        HAVING amount > 0
        ORDER BY amount DESC
    </select>

</mapper>
